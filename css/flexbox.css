* {
    margin: 0;
    padding: 0;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

body {
    background: #f2f2f2;
    font-family: Arial, sans-serif, Helvetica;
}

.contenedor {
    width: 80%;
    height: 500px;
    max-width: 700px;
    background: #212d40;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    /*flex-flow: row wrap; */
    justify-content: start;
    /* align-items: center;*/
    align-content: center;
}

.caja {
    width: 100px;
    height: 100px;
    background: #f79256;
    text-align: center;
    margin: 20px;
    padding: 20px;
    font-size: 40px;
    color: #fff;
    order: 1;
    flex-grow:1;
}

.dos {
    order: 2;
    flex-shrink: 0;
    flex-basis: 200px;
}

/*
PROPIEDADES PARA EL CONTENEDOR PADRE

flex-direction: row | column | column-reverse | row-reverse
flex-wrap: wrap (mantiene tama;o) | nowrap | wrap-reverse
flex-flow: atajo (valor direction -valor wrap)
justify-content: flex-start | flex-end | center | space-between | space-around
align-items (cuando tengo solo una linea de elementos): flex-start | flex-end | center | stretch | baseline
align-content (cuando tendo mas de una linea de alimentos): flex-start | flex-end | center | space-between | space-around

PROPIEDADES PARA LOS ELEMENTOS HIJO
order:
flex-grow (espacio que abarcan. flex-grow 1 abarca el width entero) flex grow 2 significa que es crece el doble que el otro
flex-shrink (habilidad para hacerse mas peque;o en proporcion a los demas) si le pongo cero no se puede achicar mas
flex-basis (tama;o inicial de width de elemento)
flex: 1 1 auto (valores de gorw, srink y basis)
align-self (opera solo sobre ese elemento): auto | flex-start | flex-end | center | baseline | stretch (funciona con alto automatico)

 */